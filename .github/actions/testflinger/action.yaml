name: "Testflinger submit job and monitor Action"
description: "Creates a job for testflinger with the given parameters, submits it and monitors it"
inputs:
  job_queue:
    description: "Queue that will run the job"
    required: true
  global_timeout:
    description: "Maximum time the job is allowed to run"
    required: false
    default: 3600
  output_timeout:
    description: "Maximum time the job is allowed to run without producing any output"
    required: false
    default: 1800
  provision_data:
    description: "'url:...' or 'distro:...', used to fetch the provisioning image"
    required: true
  test_cmds:
    description: "Test tha the testflinger job has to run"
    required: true
runs:
  using: "composite"
  steps:
    - name: Install testflinger
      shell: bash
      run: |
        sudo snap install testflinger-cli
        sudo snap install yq

    - name: Test testflinger connection
      shell: bash
      run: |
        nc -vz testflinger.canonical.com 443

    - name: Prepare job
      shell: bash
      run: |
        echo "
          job_queue : ${{ inputs.job_queue }}
          global_timeout: ${{ inputs.global_timeout }}
          output_timeout: ${{ inputs.output_timeout }}
          provision_data:
            ${{ inputs.provision_data }}
          test_data:
            test_cmds: |
              ${{ inputs.test_cmds }}
        " | yq > job.yaml
        cat job.yaml

    - name: Submit job to testflinger
      shell: bash
      run: |
        JOB_ID=$(testflinger submit -q job.yaml)
        echo "JOB_ID: $JOB_ID"
        echo "::set-output name=job_id::$JOB_ID"

    - name: Poll job status and process results
      shell: bash
      run: |
        echo $JOB_ID
        exit 0
        JOB_ID=${{ steps.submit_job.outputs.job_id }}
        testflinger poll $JOB_ID

        TEST_STATUS=$(testflinger results $JOB_ID | jq -er .test_status)
        echo "Test exit status: $TEST_STATUS"
        exit $TEST_STATUS
